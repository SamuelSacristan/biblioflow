services:
  postgres:
    image: postgres:15-alpine
    container_name: biblioflow-postgres-dev
    env_file:
      - .env.dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7
    container_name: biblioflow-mongo-dev
    env_file:
      - .env.dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_dev_data:/data/db
      - ./database/mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27019:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./back
      dockerfile: dockerfile.dev
    container_name: biblioflow-backend-dev
    env_file:
      - .env.dev
    environment:
      NODE_ENV: development
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgresql://app_user:app_password_123@postgres:5432/biblioflow
      MONGO_URL: ${MONGO_URL}
      PORT: 3000
      LOG_LEVEL: debug
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - ./back:/usr/src/app
      - /usr/src/app/node_modules
      - ./logs:/usr/src/app/logs
    ports:
      - "3001:3000"
      - "9229:9229"
    restart: unless-stopped
    tmpfs:
      - /tmp
    labels:
      - "dev.environment=development"
      - "dev.service=backend"
      - "dev.hot-reload=enabled"

  frontend:
    build:
      context: ./front
      dockerfile: dockerfile.dev
    container_name: biblioflow-frontend-dev
    env_file:
      - .env.dev
    depends_on:
      - backend
    volumes:
      - ./front:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4201:4200"
    environment:
      - NODE_ENV=development
      - NG_CLI_ANALYTICS=false
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    labels:
      - "dev.environment=development"
      - "dev.service=frontend"
      - "dev.hot-reload=enabled"

  nginx:
    image: nginx:alpine
    container_name: biblioflow-nginx-dev
    volumes:
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    labels:
      - "dev.environment=development"
      - "dev.service=proxy"

volumes:
  postgres_dev_data:
    driver: local
    labels:
      - "dev.data=postgres"
  mongo_dev_data:
    driver: local
    labels:
      - "dev.data=mongo"

networks:
  default:
    driver: bridge
    labels:
      - "dev.network=main"